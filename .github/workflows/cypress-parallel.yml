# 1. **Set a number of runners in `X/Y` format.** For example, 2 runners would mean saving `"1/2"`, `"2/2"`, for later. (Job: "generate_runner_variables")
# 2. **Restore the load balancer main map file from a persisted location.** (Jobs: needed for "cypress_run_e2e" for accurate balancing, and "merge_cypress_load_balancing_maps" for saving results)
# 3. **Execute each Cypress `run` process in parallel using the `runner` variables.** ("cypress_run_e2e")
# 4. **Wait for each Cypress process to fully complete.**
# 5. **Collect the load balancing maps from each completed runner process.** ("merge_cypress_load_balancing_maps")
# 6. **Merge the temporary maps back to the original load balancing map.** ("merge_cypress_load_balancing_maps")
# 7. **Save the updated main load balancing map back to its persisted location.** ("merge_cypress_load_balancing_maps")
name: Testing load balancing Cypress E2E tests

on:
  pull_request:
  workflow_dispatch:
    inputs:
      runner_count:
        type: number
        description: Number of runners to use for parallelization
        required: false
        default: 4
      debug:
        type: choice
        description: Enables debugging on the job and on the cypress-load-balancer script.
        options:
          - ""
          - "*"
          - "cypress-load-balancer"

env:
  runner_count: ${{ inputs.runner_count || 4}}

jobs:
  generate_runner_variables:
    runs-on: ubuntu-22.04
    outputs:
      runner-variables: ${{ steps.generate-runners.outputs.runner-variables }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      # "yarn build" is only needed for this project to build the CLI ! It shouldn't be required in other projects as the CLI scripts should be installed normally
      - name: Install dependencies
        run: |
          yarn install
          yarn build

      - id: generate-runners
        run: npx cypress-load-balancer generate-runners ${{ inputs.runner_count || env.runner_count }} --gha

  cypress_run_e2e:
    runs-on: ubuntu-22.04
    needs: generate_runner_variables
    strategy:
      fail-fast: false
      matrix:
        runner: ${{ fromJson(needs.generate_runner_variables.outputs.runner-variables) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get cached load-balancing map
        id: cache-restore-load-balancing-map
        uses: actions/cache/restore@v4
        with:
          fail-on-cache-miss: false
          path: .cypress_load_balancer/spec-map.json
          key: cypress-load-balancer-map-${{ github.head_ref || github.ref_name }}-${{ github.run_id }}-${{ github.run_attempt }}
          # Restore keys:
          ## 1. Same key from previous workflow run
          ## 2. Key from pull request base branch most recent workflow. Used for the "base" map, if one exists
          restore-keys: |
            cypress-load-balancer-map-${{github.head_ref || github.ref_name }}-${{ github.run_id }}-${{ github.run_attempt }}
            cypress-load-balancer-map-${{github.head_ref || github.ref_name }}-${{ github.run_id }}-
            cypress-load-balancer-map-${{github.head_ref || github.ref_name }}-
            cypress-load-balancer-map-${{ github.base_ref }}-

      - name: Cypress e2e tests (${{ matrix.runner }})
        uses: cypress-io/github-action@v6
        with:
          browser: electron
          # Fix for https://github.com/cypress-io/github-action/issues/480
          config: videosFolder=/tmp/cypress-videos
        env:
          CYPRESS_runner: ${{ matrix.runner }}

      # Artifacts cannot be saved with a forward slash ( / ), so this converts it from X/Y to X-Y
      - id: standardize-runner-name-for-artifacts
        run: |
          runner_name="${${{ matrix.runner }}//\//-}"
          echo "runner_name=runner_name" >> "$GITHUB_OUTPUT"

      - name: Upload temp load balancer map
        if: (!cancelled())
        uses: actions/upload-artifact@v4
        with:
          name: spec-map-${{ steps.standardize-runner-name-for-artifacts.outputs.runner_name }}
          path: .cypress_load_balancer/spec-map-*.json
          include-hidden-files: true
          if-no-files-found: "error"

  merge_cypress_load_balancing_maps:
    runs-on: ubuntu-22.04
    needs: [cypress_run_e2e]
    if: (!cancelled())
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: |
          yarn install
          yarn build

      - name: Get cached load-balancing map
        id: cache-restore-load-balancing-map
        uses: actions/cache/restore@v4
        with:
          fail-on-cache-miss: false
          path: .cypress_load_balancer/spec-map.json
          key: cypress-load-balancer-map-${{ github.head_ref || github.ref_name }}-${{ github.run_id }}-${{ github.run_attempt }}
          # Restore keys:
          ## 1. Same key from previous workflow run
          ## 2. Key from pull request base branch most recent workflow
          restore-keys: |
            cypress-load-balancer-map-${{github.head_ref || github.ref_name }}-${{ github.run_id }}-${{ github.run_attempt }}
            cypress-load-balancer-map-${{github.head_ref || github.ref_name }}-${{ github.run_id }}-
            cypress-load-balancer-map-${{github.head_ref || github.ref_name }}-
            cypress-load-balancer-map-${{ github.base_ref }}-

      - name: If no map exists for either the base branch or the current branch, then initialize one
        id: initialize-map
        run: npx cypress-load-balancer initialize
        if: ${{ hashFiles('.cypress_load_balancer/spec-map.json') == '' }}

      - name: Download temp maps
        uses: actions/download-artifact@v4
        with:
          pattern: spec-map-*
          path: .cypress_load_balancer/temp
          merge-multiple: false

          #TODO: TEMPORARY
      - run: ls -al

      - name: Merge files
        run: npx cypress-load-balancer merge -G ".cypress_load_balancer/temp/spec-map-*.json" --HE error

      - name: Save overwritten cached load-balancing map
        id: cache-save-load-balancing-map
        uses: actions/cache/save@v4
        with:
          #This saves to the workflow run. To save to the base branch during pull requests, this needs to be uploaded on merge using a separate action
          # @see `./save-map-on-to-base-branch-on-pr-merge.yml`
          key: cypress-load-balancer-map-${{ github.head_ref || github.ref_name }}-${{ github.run_id }}-${{ github.run_attempt }}
          path: .cypress_load_balancer/spec-map.json

      # This is to get around the issue of not being able to access cache on the base_ref for a PR.
      # We can use this to download it in another workflow run: https://github.com/dawidd6/action-download-artifact
      # That way, we can merge the source (head) branch's load balancer map to the target (base) branch.
      - name: Upload main load balancer map
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-load-balancer-map
          path: .cypress_load_balancer/spec-map.json
